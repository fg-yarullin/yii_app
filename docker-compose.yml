version: '3'
services:
#  php:
#    build:
#      context: .
#      dockerfile: Dockerfile
##    hostname: yii_host
#    image: yiisoftware/yii2-php:7.4-fpm
#    working_dir: /var/www
#    volumes:
##      - ~/.composer-docker/cache:/root/.composer/cache:delegated
##      - ./:/app:delegated
#      - ./:/var/www
#      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
#    ports:
#      - '8000:80'
#    restart: unless-stopped
#    #stdin_open: true # docker run -i
#    tty: true  # docker run -t
#    networks:
#      - app-network
  php:
    image: yiisoftware/yii2-php:7.4-apache
    volumes:
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      - ./:/app:delegated
    ports:
      - '8000:80'

  #Nginx Service
  yii_webserver:
    image: nginx:alpine
    container_name: yii_webserver
    restart: unless-stopped
    tty: true
    ports:
      - "8001:80"
      - "4430:443"
    volumes:
      - ./:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service
  yii_db:
    image: mysql:5.7.22
#    container_name: yii_db
    restart: unless-stopped
    tty: true
    ports:
      - "33061:3306"
    environment:
      MYSQL_DATABASE: yii_db
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_USER: user
      MYSQL_PASSWORD: secret
#      SERVICE_NAME: yii_db
    volumes:
      - ./docker_db:/var/lib/mysql
#      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

#Volumes
volumes:
  docker_db:
    driver: local

#Docker Networks
networks:
  app-network:
    driver: bridge